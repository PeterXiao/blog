##   IOS app  性能 （）
    
  ### 一个好的应用应该如何定义,
  主要有以下三方面：
  
  + 业务/功能
  
  + 符合逻辑的交互
  
  + 优秀的性能
  
  
  ### 用户体验的性能问题主要总结为4个类别
  
  + 流畅
  
  + 稳定
  
  + 省电、省流量
  
  + 安装包小
  
  ### 表層原因分析：
    性能问题的主要原因是什么，原因有相同的，也有不同的，但归根到底，
    不外乎内存使用、代码效率、合适的策略逻辑、代码质量、安装包体积这一类问题，整理归类如下：
  
  ![性能問題](https://github.com/PeterXiao/blog/blob/master/2019/4/images/20190403095936.png)
  
  从图中可以看到，打造一个高质量的应用应该以4个方向为目标：快、稳、省、小。
  快：使用时避免出现卡顿，响应速度快，减少用户等待的时间，满足用户期望。
  稳：减低 crash 率和 ANR 率，不要在用户使用过程中崩溃和无响应。
  省：节省流量和耗电，减少用户使用成本，避免使用时导致手机发烫。
  小：安装包小可以降低用户的安装成本。
  要想达到这4个目标，具体实现是在右边框里的问题：卡顿、内存使用不合理、代码质量差、代码逻辑乱、安装包过大，这些问题也是在开发过程中碰到最多的问题，在实现业务需求同时，也需要考虑到这点，多花时间去思考，如何避免功能完成后再来做优化，不然的话等功能实现后带来的维护成本会增加。
    
  ** iOS性能测试是：**
  + l 资源消耗
  + l 内存泄漏
  + l 流量消耗
  + l 耗电功率
  + l 渲染效果
  + l 加载时间
  + l 。。。  

** 性能调优的方式：**
+ l 通过专门的性能调优工具instruments
+ l 通过优化代码


### 预先的性能参数：
+  性能指标之硬件占用： 70%  多核cpu 即为 < 核数*70%

+  网络IO/磁盘IO/内存占用同理。

+   网络带宽占用，硬件余量。








##  参考：
+ https://tech.meituan.com/2017/06/09/webviewperf.html
+ https://tech.meituan.com/2017/06/09/webviewperf.html
+ https://tech.meituan.com/2016/12/19/hertz.html
+ https://tech.meituan.com/2018/12/06/waimai-ios-optimizing-startup.html
+ https://github.com/skyming/iOS-Performance-Optimization
+ https://www.infoq.cn/article/2012/09/javaee-performance
+ http://java.dzone.com/articles/top-10-causes-java-ee
+ http://www.ideadata.com.cn/wisdomAction/readWisdom.do?id=106

##  如何快速集成WSL到VSCODE，实现性能测试持续进行
### 1.windows 10 系统启用 wsl，并在miscro store 安装 linux子系统。
     https://github.com/sirredbeard/Awesome-WSL
     
     安装之后 记录账户名密码。
### 2. 下载并配置cmder
    https://cmder.net/
### 3. 配置 vscode
     3.1  ctrl + shift + P  
          搜索 powershell  将user setting.json信息改为 
          
          "terminal.external.windowsExec": "E:\\cmders\\Cmder.exe",  //你的cmder地址
          "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\wsl.exe"
      3.2 配置vue开发环境。
          
          3.2.1     使用记录的账户名密码： 
                     sudo apt-get update
                     sudo apt-get upgrade
                     sudo apt-get install nodejs
                     sudo apt-get install npm
                     sudo npm install -g typescript
                     sudo npm install -g vue-cli
          3.2.2 配置 淘宝 cnpm地址  https://npm.taobao.org/
                     sudo     npm install -g cnpm --registry=https://registry.npm.taobao.org
                     
          3.2.3 优化shell体验：
                    sudo apt-get install zsh 
                    安装 oh-my-zsh  oh my zsh 用来管理 zsh 的配置
                    # 安装 Oh My Zsh
                    wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
                    # 以上命令可能不好使，可使用如下两条命令
                    wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh
                    bash ./install.sh
                    
          3.2.4 优化 插件安装   
              +   fasd         快速访问文件或目录 
                
                   sudo apt install fasd     
                   
                   用法：
                   
                   alias f='fasd -f'          # 文件
                   alias d='fasd -d'        # 目录
                   alias a='fasd -a'        # 任意
                   alias s='fasd -si'       # 显示并选择
                   
                   alias sd='fasd -sid'        # 选择目录
                   alias sf='fasd -sif'          # 选择文件
                   alias z='fasd_cd -d'       # 跳转至目录
                   alias zz='fasd_cd -d -i'  # 选择并跳转至目录
                   
                   
            +    zsh-autosuggestions   
                 命令行命令键入时的历史命令建议插件
                 
                 按照官方文档提示，直接执行如下命令安装：
                   git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
            
            +  zsh-syntax-highlighting   
                命令行语法高亮插件
            
                按照官方文档提示，直接执行如下命令安装：
            
                git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
                
                最后记得在~/.zshrc文件中配置插件：
                
                plugins=(
                  git fasd zsh-autosuggestions zsh-syntax-highlighting
                )
                
          oh-my-zsh 主题修改：
          
          主题修改      
          
          on-my-zsh 主题 https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes
          
          oh_my_zsh的主题和设置一般都在主目录下
          
          # 进入主题目录
          cd ~/.oh-my-zsh/themes
          
          #查看当前使用的主题
          echo $ZSH_THEME
          主题修改需要对 ~/.zshrc 文件进行相应的修改
          
          ZSH_THEME="你喜欢的主题"
          但是有可能你对这个主题的 title 不太满意，比如多余的主机名或者太长的路径名之类的，这个时候我们最好的做法是把我们想要修改的主题文件做一个复制，然后在这个文件里边修改，最后再将.zshrc 文件中的主题修改为我们复制的这个主题。
          
          
            
            
                
                   
                 
    
    


      








軟件系統標準化的相關文章



https://github.com/decaywood/XueQiuSuperSpider

[API标准化成为技术团队面临的最大挑战](https://mp.weixin.qq.com/s/FC3OmZVPWisZUoFOXBmcFA)


筆記

https://mvnrepository.com/artifact/org.mapdb/mapdb/3.0.7

https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md

http://blog.nsfocus.net/threat-modeling/

https://www.google.com/search?q=%E5%A8%81%E8%84%85%E5%BB%BA%E6%A8%A1&rlz=1C1CHWL_zh-CNUS831US831&oq=%E5%A8%81%E8%84%85&aqs=chrome.1.69i57j69i59j69i65l2j0l2.2239j0j1&sourceid=chrome&ie=UTF-8

http://zhannei.baidu.com/cse/search?q=%E5%AE%89%E5%85%A8&p=0&s=1841543737020962857&entry=1

企业应用：企业软件架构问题探讨
96  RussellSN 
2016.10.08 20:06* 字数 1104 阅读 166评论 0喜欢 2赞赏 2
通常，我们大量从事软件研发的人群面临的软件任务都是为某个领域的企业服务的。也即是企业活动IT化的一部分。那么，企业软件架构的目标是什么？
按照一般性的辨析方法，我们将这个问题分为根本问题（essence）和次要问题（accident）。这里面根本和次要的是相对企业软件的存在合理性前提而言的，不能简单判定次要问题就是不重要问题。

根本问题
把软件当作这个企业生产发展的一项投资的视角，从审视这个软件能够为企业解决什么问题出发。来分析软件需要面临的问题，思考引入了软件后这些问题如何能够更好的解决。从而归纳提炼得到软件核心问题域以及各域之间的联系，决定如何通过IT手段来提供帮助。这是企业软件架构的本质问题。对应于架构方法论，应该是业务架构。

次要问题
次要问题具有一些通用性了，或者说跟通常理解的软件技术更加接近，它们是应用架构、技术架构、信息（数据）架构等等。

重要声明
根本问题之所以根本，是它决定了这个软件是否有存在的必要，以及应该呈现出什么样的轮廓，虽然其是总体上的，但是是精确的。
次要问题只是相对根本问题而言，次要问题同样决定了一款软件的好与坏。

矛盾的业务架构
往往在一个软件团队，尤其是大型团队中，大量的人员从事具体功能开发，看不到业务架构全局，而业务架构涉及的概念基本面上相对容易掌握和理解（毕竟接近现实世界），容易导致团队整体上认为自身已经掌握了“业务”。导致不能对业务架构进行深层次推敲看不到问题域精要从而真正影响了软件内在一致性。这是业务架构“容易”掌握之处，也是认识上的误区。相对于交付的实实在在的眼前困难，业务架构的本质是否掌握显得并不那么紧迫。因此重要不紧急的事情就这样被忽略了。
同时，业务架构因为是真正对问题域的总结和提炼，level相对较高，基本上也只有高级别架构师能够识别精要。这是业务架构的“复杂”本质，但是大部分团队成员并不能很好的认识到。
大量成员过于聚焦次要问题，认为复杂问题简单，这就是业务架构本身的矛盾现状，也是导致一些即使技术精湛的团队始终做不出特别成功的产品的根本原因。同时，一款成功的软件产品往往是业务架构有效承载了企业的IT化本质诉求，团队理解并采用恰当的软件技术实现了这个架构；一言以蔽之，业务与技术实现了良好的结合，这是一款优秀企业软件的气质。

结言
忽略根本问题，等于是向存在意义挑战；忽略次要问题，等于空想。

企业软件架构设计的战术建模两个观点：
充血模型本质上是把数据和逻辑的解耦依靠个人的经验来解决的，好处是代码复用度非常高，领域聚合度非常高，属于企业代码里面的奢侈品；

贫血模型本质上是数据和逻辑的强制解耦，数据是稳定的基础，由经验SE来控制，逻辑相对变化，通过框架等等约束技能一般的团队来完成。是企业代码里面的大规模工业产品。




Real World Kanban 作者访谈
Ben Linders
陆志伟


Mattias Skarin 编著的 Real World Kanban 为大家提供了四个 Kanban 用于可视化的案例研究，并提供了产品开发的洞见与改进方法。

InfoQ 读者可以下载一份 Real World Kanban 样本。

InfoQ 采访了 Mattias Skarin，关于 Kanban 和精益的本质，为什么组织需要灵活性，使用产品使用数据做持续改进，可视化是如何帮助团队理解问题的，腾出充裕的时间做改进，如何在 Kanban 里将回顾用于持续改进，以及开始使用 Kanban 的建议。

InfoQ：什么使您决定写一本附带研究案例的 Kanban 书？

Skarin：最好的学习方法是通过案例学习。所以我希望向那些应用 Kanban 的人展示在现实中公司内发生的事情。因为事情并不总是按照理论向前发展。

其次，我觉得分享传统公司的案例非常的重要，以及他们是如何以 2 倍甚至 2 倍以上的速度改进的。很少有公司能够成为下一个 Spotify。他们总会留下遗产——角色、功能、流程、技术债务、和有关世界是如何运转、什么使得他们走到如地位的看法。我们通常不会过多地讨论在公司适应和发展阶段，他们是如何做改进的，但是他们有很多值得我们学习借鉴的地方。

InfoQ：您能简要描述一下您认为 Kanban 和精益的本质是什么？

Skarin：持续改进端到端流（改进整体比改进部分更加重要）。还有就是改进人的方面，使用和利用人类优势（创造力、独创性、团队合作、与众不同）建立组织——而不是构建系统，在这种系统下人们不能高品质地完成工作、不能逐渐发展壮大。领导力（以身作则）、责任心和建立试验文化是使其发生的三个关键因素。

InfoQ：您能解释一下，当开发软件时为什么应该将无缺陷的成果传递到下一阶段？

Skarin：有两方面原因：经济原因——后期修复问题的成本将会成指数上升。但是同样重要的是建立一种责任和品质文化。我们就不应该将有缺陷的成果传递给别人。这是另一个原因。

InfoQ：在书中您解释了为了抢占市场先机，为什么组织需要灵活性。您能给出一些案例吗？

Skarin：为了创新，我们可能需要灵活性从而探索新的商业模式，使用新的业务流程。而且当构建产品时，为了改变架构，需要灵活性从而允许团队探索不同的技术选择。最后，快速培训新人也需要灵活性。总之，灵活性比一致性更加重要。

InfoQ：书中有一个案例讲的是基于开发产品的使用数据做持续改进。您能解释一下团队是如何做到的？

Skarin：我们有一个非常低技术含量的解决方法：）当推出新产品时，市场部会采访用户体验。然后这些信息会在两种不同的座谈会中传递给产品开发部门。第一，每月我们有一次公司演示，市场部会汇报之前产品的重要发现。第二，产品方案负责人会参加企业 Kanban 站立会议，并与大家分享经验。我们也会直观记录成功的发布（客户体验很好）和不成功的发布。如果客户体验不好，我们会一起进行根本原因分析，找出需要改变的地方。

InfoQ：您能举例说明一下可视化是如何帮助团队理解问题，以及解决问题的？

Skarin：仅仅是看到整个团队合并后的工作完成情况就会觉得很惊讶。这促使多个团队在关注和区分工作时可以作为一个整体而不是个体。另一个案例是可视化平台改进已经持续好几个月了。仅仅通过可视化真正需要完成的事情，我们就可以在一周或者两周内实现专注并交付。

另一方面是，可视化有助于澄清不是问题的问题。在一个案例中，我们决定可视化团队如何集中时间。它帮助我们揭穿不能通过自由组合的个体团队实现整体产品方案流的局部最优化。

InfoQ：很多团队都是超负荷工作。您对团队如何腾出时间做改进有什么建议吗？

Skarin：是的。有一些事情你可以做。

首先，可视化你手头上的工作。这样它会给你洞见。

其次，学会使用限制在制品。如果这很困难，使用物理标记。这使得团队成员更容易意识到他们正在破坏团队承诺。

第三，优先考虑流入。如果你的上游部门没有行使他们这方面的职责，那么你应该帮他们承担这种职责（并与他们进行沟通，让他们接受后果）。

第四：当工作超负荷时，你可以推迟下述类型的工作。

规划过于超前的工作（最好意识到这些类型的工作“及时完成”比“提早很长时间完成”要好。有一件事可以确定：计划是会变的！）
没有解释明确后果的截止日期。分有明确经济后果的截止日期（“我们错过了市场窗口”）和计划的截止日期（“我们承诺”）。
低质量的流入。一步一步地，返回上游团队低质量的工作，将其返回给创造它们的团队（而不是帮助他们修复）。
信息类型问题“我的……在哪”……“我怎么……”。通过创建一个拥有简单问答功能的 Wiki；培训他们自己回答基本问题的职责；并且在合适的地方安置 Kanban 白板，这样可以通过白板而不是给人打电话回答状态问题，通过这些方法降低流入。
这些选择没有一个是容易的，但是你愿意继续超负荷吗？我们可能不能一下子修复整个组织，但是我们可以为我们单位同事创建一个健康的工作环境。

InfoQ：您能分享在 Kanban 内如何使用回顾实现持续改进的案例吗？

Skarin：走向白板是回顾良好的开端。发生了什么，被什么阻碍，什么可以解决这些阻碍事件，我们是否生产高质量的工作？然后看向图表“交付周期发生了什么？返工比例是多少？（为什么会产生返工？）”最后，看看团队成员的经验。管理层跨组织边界参与汇报为了解决瓶颈和问题他们做了什么是关键组成部分。

使回顾起作用的关键在于专注回顾，依赖数据驱动，并且让管理层参与跨团队的问题解决。

InfoQ：如果组织对部署 Kanban 感兴趣，您能否对从何开始给点意见？

Skarin：读一本书是最好的开始方法。另一种方法是观察其它 Kanban 团队。然后参加学习基本原则和它们如何创造价值（帮助你持续改进）的课程，最后，亲身尝试。我们通过实验学习。拥有一个经验丰富的教练时不时地帮助你们是很有用的。经验丰富的教练可以帮助引进全新的视角。

关于作者
“孙子曾经说过：将军的最终责任是机动进入成功的阵地。我们如何在软件实现这一点？这是我追求和寻找的东西。”

Mattias Skarin （很干脆的家伙）指导和培训管理团队和价值流如何在全球，快速发展的环境下建立和维持竞争优势。Mattias 是“Real world kanban”的作者，以及“Kanban and Scrum, making the most of both”的合作者。参见 Mattias 的 blog。

查看英文原文：Q&A on Real World Kanban

文章版权归极客邦科技 InfoQ 所有，未经许可不得转载。